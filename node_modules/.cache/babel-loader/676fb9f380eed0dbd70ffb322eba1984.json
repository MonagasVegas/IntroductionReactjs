{"ast":null,"code":"var _jsxFileName = \"C:\\\\PERSONALPROJECT\\\\level-one-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { TodoCounter } from './Components/TodoCounter';\nimport { TodoSearch } from './Components/TodoSearch';\nimport { TodoList } from './Components/TodoList';\nimport { TodoItem } from './Components/TodoItem';\nimport { CreateTodoButtom } from './Components/CreateTodoButtom'; // import './App.css'\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false }\n// ]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  _s();\n\n  // Guardamos nuestro item en una constante\n  const localStorageItem = localStorage.getItem(itemName);\n  let parsedItem; // Utilizamos la lógica que teníamos, pero ahora con las variables y parámentros nuevos\n\n  if (!localStorageItem) {\n    localStorage.setItem(itemName, JSON.stringify(initialValue));\n    parsedItem = initialValue;\n  } else {\n    parsedItem = JSON.parse(localStorageItem);\n  } // ¡Podemos utilizar otros hooks!\n\n\n  const [item, setItem] = React.useState(parsedItem); // Actualizamos la función para guardar nuestro item con las nuevas variables y parámetros\n\n  const saveItem = newItem => {\n    const stringifiedItem = JSON.stringify(newItem);\n    localStorage.setItem(itemName, stringifiedItem);\n    setItem(newItem);\n  };\n\n  return [item, saveItem];\n}\n\n_s(useLocalStorage, \"B/C+yLGYasz+SPGAkvc/DI3mWM8=\");\n\nfunction App() {\n  _s2();\n\n  const [todos, saveTodos] = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState(''); // Estado inicial de nuestros TODOs\n  // Cantidad de TODOs completados\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length; // Cantidad total de TODOs\n\n  const totalTodos = todos.length; // Creamos una nueva variable en donde guardaremos las coincidencias con la búsqueda\n\n  let searchedTodos = []; // Lógica para filtrar\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase(); // preguntamos si incluye el texto  que se escribe por el input.. este es el criterio de evaluacion que va a determinar que todos muestra y cuales no.\n\n      return todoText.includes(searchText);\n    });\n  } // Hacemos un re-render\n\n\n  const completeTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = text => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TodoCounter, {\n        total: totalTodos,\n        completed: completedTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoSearch, {\n        searchValue: searchValue,\n        setSearchValue: setSearchValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        children: searchedTodos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n          text: todo.text,\n          completed: todo.completed,\n          onComplete: () => completeTodo(todo.text),\n          onDelete: () => deleteTodo(todo.text)\n        }, todo.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTodoButtom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s2(App, \"EYsrDwfpGttiZWPU2ClZtw5M6YA=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TodoCounter","TodoSearch","TodoList","TodoItem","CreateTodoButtom","useLocalStorage","itemName","initialValue","localStorageItem","localStorage","getItem","parsedItem","setItem","JSON","stringify","parse","item","useState","saveItem","newItem","stringifiedItem","App","todos","saveTodos","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","map"],"sources":["C:/PERSONALPROJECT/level-one-react/src/App.js"],"sourcesContent":["import React from 'react'\nimport { TodoCounter } from './Components/TodoCounter'\nimport { TodoSearch } from './Components/TodoSearch'\nimport { TodoList } from './Components/TodoList'\nimport { TodoItem } from './Components/TodoItem'\nimport { CreateTodoButtom } from './Components/CreateTodoButtom'\n\n// import './App.css'\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false }\n// ]\n\nfunction useLocalStorage (itemName, initialValue) {\n  // Guardamos nuestro item en una constante\n  const localStorageItem = localStorage.getItem(itemName)\n  let parsedItem\n\n  // Utilizamos la lógica que teníamos, pero ahora con las variables y parámentros nuevos\n  if (!localStorageItem) {\n    localStorage.setItem(itemName, JSON.stringify(initialValue))\n    parsedItem = initialValue\n  } else {\n    parsedItem = JSON.parse(localStorageItem)\n  }\n\n  // ¡Podemos utilizar otros hooks!\n  const [item, setItem] = React.useState(parsedItem)\n\n  // Actualizamos la función para guardar nuestro item con las nuevas variables y parámetros\n  const saveItem = (newItem) => {\n    const stringifiedItem = JSON.stringify(newItem)\n    localStorage.setItem(itemName, stringifiedItem)\n    setItem(newItem)\n  }\n\n  return [item, saveItem]\n}\n\nfunction App () {\n  const [todos, saveTodos] = useLocalStorage('TODOS_V1', [])\n  const [searchValue, setSearchValue] = React.useState('')\n\n  // Estado inicial de nuestros TODOs\n\n  // Cantidad de TODOs completados\n  const completedTodos = todos.filter((todo) => !!todo.completed).length\n  // Cantidad total de TODOs\n  const totalTodos = todos.length\n  // Creamos una nueva variable en donde guardaremos las coincidencias con la búsqueda\n  let searchedTodos = []\n\n  // Lógica para filtrar\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase()\n      const searchText = searchValue.toLowerCase()\n      // preguntamos si incluye el texto  que se escribe por el input.. este es el criterio de evaluacion que va a determinar que todos muestra y cuales no.\n      return todoText.includes(searchText)\n    })\n  }\n\n  // Hacemos un re-render\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text)\n    const newTodos = [...todos]\n    newTodos[todoIndex].completed = true\n    saveTodos(newTodos)\n  }\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text)\n    const newTodos = [...todos]\n    newTodos.splice(todoIndex, 1)\n    saveTodos(newTodos)\n  }\n\n  return (\n    <>\n      <>\n        {/* Pasamos el estado a nuestro componente */}\n        <TodoCounter total={totalTodos} completed={completedTodos} />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n        <TodoList>\n          {/* Regresamos solamente los TODOs buscados */}\n          {searchedTodos.map((todo) => (\n            <TodoItem\n              key={todo.text}\n              text={todo.text}\n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.text)}\n              onDelete={() => deleteTodo(todo.text)}\n            />\n          ))}\n        </TodoList>\n\n        <CreateTodoButtom />\n      </>\n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}